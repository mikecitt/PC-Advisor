package rules1;

import com.pcadvisor.pcadvisorapi.dto.PriorityDTO;
import com.pcadvisor.pcadvisorapi.dto.AffinitiesDTO;
import com.pcadvisor.pcadvisorapi.model.CPU;
import com.pcadvisor.pcadvisorapi.model.GPU;
import com.pcadvisor.pcadvisorapi.model.RAM;
import com.pcadvisor.pcadvisorapi.model.Chipset;
import com.pcadvisor.pcadvisorapi.model.RamType;
import com.pcadvisor.pcadvisorapi.model.CPUBrand;
import com.pcadvisor.pcadvisorapi.model.Storage;
import com.pcadvisor.pcadvisorapi.model.PowerSupply;
import com.pcadvisor.pcadvisorapi.model.PCBuild;
import com.pcadvisor.pcadvisorapi.drools.model.CpusGpus;
import com.pcadvisor.pcadvisorapi.drools.model.CpuGpuPair;

rule "CPU-GPU choose"
agenda-group "cpu-gpu-ram"
no-loop true
salience 100
    when
        priorityDTO: PriorityDTO($cpuPriority: cpuPriority, $gpuPriority: gpuPriority)
        $mb: Motherboard()
        $cpu: CPU(score > ($cpuPriority * 900) && score < (($cpuPriority+2) * 900))
        $gpu: GPU(score > ($gpuPriority * 2000) && score < (($gpuPriority+2) * 2000))
        affinities: AffinitiesDTO()
        //affinities: AffinitiesDTO(brandPref == null || brandPref == $cpu.getCpuBrand())
    then
        //System.out.println($cpu.getDisplayName() + " + " + $mb.getDisplayName() + " + " + $gpu.getDisplayName());
        insert(new PCBuild($cpu, $mb, $gpu));
    end

rule "RAM choose"
agenda-group "cpu-gpu-ram"
no-loop true
salience 100
    when
        priorityDTO: PriorityDTO($ramPriority: ramPriority)
        $pcBuild: PCBuild($cpu: cpu)
        $ram: RAM(size >= ($ramPriority * 8 / 5))
    then
        //PCBuild newBuild = new PCBuild($pcBuild);
        $pcBuild.setRam($ram);
        update($pcBuild);
        //$pcBuild.setRam($ram);
        //update($pcBuild);
        //insert(newBuild);
    end

rule "Power Supply choose"
agenda-group "cpu-gpu-ram"
no-loop true
salience 100
    when
        $pcBuild: PCBuild($powerUsage: getPowerUsage())
        $psu: PowerSupply(wattage == (($powerUsage + 300) - ($powerUsage + 300)%100))
    then
        $pcBuild.setPowerSupply($psu);
        update($pcBuild);
    end

rule "Check Budget"
agenda-group "cpu-gpu-ram"
no-loop true
salience 100
    when
        pcBuild: PCBuild($price: getPrice())
        affinities: AffinitiesDTO(budget < $price)
    then
        delete(pcBuild);
    end

rule "no builds in memory"
agenda-group "cpu-gpu-ram"
no-loop true
salience 50
    when
        not PCBuild()
        $affinities: AffinitiesDTO()
    then
        System.out.println("Povecavam budzet za 100e");
        $affinities.setBudget($affinities.getBudget() + 100);
        update($affinities);
    end

rule "final"
agenda-group "finish"
no-loop true
    when
        $pcBuild: PCBuild(ram == null)
    then
        delete($pcBuild);
        //System.out.println(pcBuild);
    end



